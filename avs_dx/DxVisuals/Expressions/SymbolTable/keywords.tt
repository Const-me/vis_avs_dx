<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".cpp" #>
<#@ assembly name="System.dll" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
// This file is automatically generated.
#include "stdafx.h"
#include "isHlslKeyword.h"

namespace Expressions
{
	bool isHlslKeyword( const CStringA& name )
	{
		switch( name.GetLength() )
		{
<#
	Group[] groups = readKeywords();
	foreach( var g in groups )
	{
		#>
			case <#= g.length #>:
				return <#= g.compareCode() #>;
<#
	}
#>		}
		return false;
	}
}<#+
	class Group
	{
		public readonly int length;
		readonly string[] names;
		public Group( IGrouping<int, string> g )
		{
			length = g.Key;
			names = g.OrderBy( n => n ).ToArray();
		}
		public string compareCode()
		{
			return string.Join( " || ", names.Select( n => string.Format( "name == \"{0}\"", n ) ) );
		}
	}

	Group[] readKeywords()
	{
		string txt = Host.ResolveParameterValue( "", "", "SOURCE" );
		return File.ReadAllLines( txt )
			.Where( s => !string.IsNullOrWhiteSpace( s ) )
			.GroupBy( s => s.Length )
			.Select( g => new Group( g ) )
			.OrderBy( g => g.length )
			.ToArray();
	}
#>